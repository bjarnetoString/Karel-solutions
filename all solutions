/*
F1     moveForward();    
F2     turnLeft();    
F3     turnAround();     
F4     turnRight();     
F5     pickBeeper();    
F6     dropBeeper();    
F7     onBeeper()    
F8     beeperAhead()     
F9     leftIsClear()     
F10    frontIsClear()  
F11    rightIsClear()     
F12    start | step into | reset     
*/

void fetchTheStars(){
    turnLeft();
    while(!onBeeper()){        
        repeat(5){
            moveForward();
        }
        if(!frontIsClear()){
            pickBeeper();
            turnAround();
            repeat(5){
                moveForward();
            }
            
            
        }
        else if(frontIsClear()) {
            moveForward();
            if(frontIsClear()){
                moveForward();
                pickBeeper();
                turnAround();
                repeat(7){
                    moveForward();
                } 
                
            }
            else{
                pickBeeper();
                turnAround();
                repeat(6){
                    moveForward();
                }
                
            }
        }
        dropBeeper();
        turnLeft();
        if (frontIsClear()){
            moveForward();
            turnLeft();            
        }       
    }
}


void partyAgain(){
    turnLeft();
    while(onBeeper()){
        pickBeeper();
        repeat(5){
            moveForward();
        }
        if(!frontIsClear()){
            dropBeeper();
            turnAround();
            repeat(5){
                moveForward();
            }
            
        }
        else if(frontIsClear()) {
            moveForward();
            if(frontIsClear()){
                moveForward();
                dropBeeper();
                turnAround();
                repeat(7){
                    moveForward();
                }                
            }
            else{
                dropBeeper();
                turnAround();
                repeat(6){
                    moveForward();
                }                
            }
        }
        turnLeft();
        if (frontIsClear()){
            moveForward();
            turnLeft();            
        }       
    }
}


void solveTheMaze(){
    while(!onBeeper()){
        if(frontIsClear() && !rightIsClear()){
            moveForward();
        }
        else if(rightIsClear()){
            turnRight();
            moveForward();
        }
        else{
            turnLeft();
        }    
    }
    
}


void jumpTheHurdles(){
    while(!onBeeper()){
        if(frontIsClear()){
            moveForward();
        }
        else{
            turnLeft();
            while(!rightIsClear()){
                moveForward();
            }
            turnRight();
            moveForward();
            turnRight();
            while(frontIsClear()){
                moveForward();
            }
            turnLeft();
            
        }
    }
}


void findTeddyBear(){
    while(!onBeeper()){
        if(frontIsClear()){
            moveForward();
        }
        else{
            turnLeft();
        }
    }
}
void saveTheFlowers(){
    turnLeft();
    while(!rightIsClear()){
        moveForward();
    }
    while(rightIsClear()){
        turnRight();
        moveForward();
        if(onBeeper()){
            pickBeeper();
        }
        if(!frontIsClear()){
            turnLeft();
            moveForward();
        }
        
    }
    while(frontIsClear()){
        dropBeeper();
        moveForward();
        turnRight();
        while(frontIsClear()){
            moveForward(); 
        }
        turnLeft();
    }
    
}



void addSlow () {    
    while(frontIsClear()) {        
        decrement();        
        turnAround();        
        while(frontIsClear()) {            
            moveForward();            
        }        
        turnRight();        
        moveForward();        
        turnRight();        
        increment();        
        turnAround();        
        while(frontIsClear()) {            
            moveForward();            
        }        
        turnLeft();        
        moveForward();        
        turnLeft();               
   }    
}

void decrement(){
    while(!onBeeper()){
        dropBeeper();
        moveForward();
    }
    pickBeeper();
}

void increment(){
    while(onBeeper()){
        pickBeeper();
        moveForward();
    }
    dropBeeper();
}


void cleanTheTunnels(){
    turnLeft();
    while(frontIsClear()){
        if(!onBeeper()){
            turnAround();
        }
        while(onBeeper()){
            pickBeeper();
            if(beeperAhead()){
                moveForward();
            }
            else{
                turnAround();
            }
        }
        while(frontIsClear()){
            moveForward();
        }
        turnLeft();
        if(frontIsClear()){
            moveForward();
            turnLeft();
            
        }
        
    }
    
}



void followTheSeeds() {
    while (beeperAhead()) {
        moveForward();
        pickBeeper();
        if (!beeperAhead()) {
            turnLeft();
        }
    }
}




void hangTheLampions() {
    while (onBeeper()) {
        turnLeft();
        pickBeeper();
        while (frontIsClear()) {
            moveForward();
        }
        dropBeeper();
        turnAround();
        while (frontIsClear()) {
            moveForward();
        }
        turnLeft();
        if (frontIsClear()) {
            moveForward();   
        }
    }
}




void walkTheLabyrinth() {
    repeat (99) {
        if (!frontIsClear()) {
            if (leftIsClear()) {
                turnLeft();
            } else {
                turnRight();
            }
        }
        moveForward();
    }
}




void removeTheTiles() {
    repeat (100) {
        pickBeeper();
        if (!frontIsClear() || !beeperAhead()) {
            turnLeft();
        }
        moveForward();
    }
}




void stealOlympicFire() {
    moveForward();
    repeat (6) {
        turnLeft();
        moveForward();
        turnRight();
        moveForward();
    }
    pickBeeper();
    moveForward();
    turnRight();
    repeat (6) {
        moveForward();
    }
    turnLeft();
    moveForward();
}




void tileTheFloor() {
    repeat (100) {
        dropBeeper();
        if (!frontIsClear() || beeperAhead()) {
            turnLeft();
        }
        moveForward();
    }
}




void cleanTheRoom() {
    repeat (4) {
        moveRight();
        moveLeft();
    }
    moveRight();
    moveAndPick();
}


void moveRight() {
    moveAndPick();
    turnLeft();
    maybePick();
    moveForward();
    turnLeft();
}

void moveLeft() {
    moveAndPick();
    turnRight();
    maybePick();
    moveForward();
    turnRight();
}

void moveAndPick() {
    repeat (9) {
        maybePick();
        moveForward();
    }
}

void maybePick() {
    if (onBeeper()) {
        pickBeeper();
    }
}


void repairTheStreet()
{
    repeat(9)
    {
        moveForward();
        if (rightIsClear())
        {
            turnRight();
            moveForward();
            dropBeeper();
            turnAround();
            moveForward();
            turnRight();
        }
    }
    
} 


void harvestTheField() {
    repeat (2) {
        pick2();
        repeat (2) {
            moveForward();
            moveForward();
            turnLeft();
        }
        pick2();
        turnAround();
    }
}



void pick2() {
    repeat (4) {
        moveForward();
        pickBeeper();
        turnRight();
        moveForward();
        turnLeft();
    }
}



void mowTheLawn() {
    repeat (2) {
        pick();
        turnUpLeft();
        pick();
        turnUpRight();
    }
    pick();
    turnUpLeft();
    pick();
}



void pick() {
    repeat (6) {
        moveForward();
        pickBeeper();
    }
    moveForward();
}


void turnUpLeft() {
    turnLeft();
    moveForward();
    turnLeft();
}


void turnUpRight() {
    turnRight();
    moveForward();
    turnRight();
}




void saveTheFlower() {
    moveForward();
    pickBeeper();
    repeat (4) {
        turnLeft();
        moveForward();
        moveForward();
        turnRight();
        moveForward();
    }
    dropBeeper();
    repeat (4) {
        moveForward();
        turnRight();
        moveForward();
        moveForward();
        turnLeft();
    }
}



void fillTheHoles() {
    repeat (4) {
        moveForward();
        turnRight();
        moveForward();
        dropBeeper();
        turnAround();
        moveForward();
        turnRight();
        moveForward();
    }
}



void climbTheStairs() {
    moveForward();
    repeat (6) {
        turnLeft();
        moveForward();
        turnRight();
        moveForward();
    }
}



void practiceHomeRun() {
    repeat (4) {
        repeat (9) {
            moveForward();
        }
        pickBeeper();
        turnLeft();
    }
}



void defuseTwoBombs() {
    defuseOneBomb();
    turnLeft();
    defuseOneBomb();
}



void defuseOneBomb() {
    moveNineForward();
    pickBeeper();
    turnAround();
    moveNineForward();
    turnAround();
}



void moveNineForward() {
    repeat (9) {
        moveForward();
    }
}



void obtainArtifact() {
    turnRight();
    moveForward();
    turnLeft();
    repeat (3) {
        moveForward();
    }
    turnLeft();
    moveForward();
    pickBeeper();
    moveForward();
    turnLeft();
    repeat (3) {
        moveForward();
    }
    turnLeft();
    moveForward();
    dropBeeper();
}



void karelsFirstProgram() {
    moveForward();
    pickBeeper();
    moveForward();
    turnLeft();
    moveForward();
    turnRight();
    moveForward();
    dropBeeper();
    moveForward();
}
